<testsuites id="" name="" tests="38" failures="0" skipped="38" errors="0" time="0.049745000000000004">
<testsuite name="debug-mermaid-test.spec.ts" timestamp="2025-05-30T14:09:13.308Z" hostname="chromium" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug Mermaid Test › should test Mermaid rendering in isolation" classname="debug-mermaid-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="diagram-editor.spec.ts" timestamp="2025-05-30T14:09:13.308Z" hostname="chromium" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="Diagram Editor › should load the editor page successfully" classname="diagram-editor.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Diagram Editor › should have both Visual and Mermaid editor tabs" classname="diagram-editor.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Diagram Editor › should display React Flow visual editor" classname="diagram-editor.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Diagram Editor › should have interactive node palette" classname="diagram-editor.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Diagram Editor › should display Mermaid text editor" classname="diagram-editor.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Diagram Editor › should allow text input in Mermaid editor" classname="diagram-editor.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Diagram Editor › should be responsive on different screen sizes" classname="diagram-editor.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Diagram Editor › should handle keyboard navigation" classname="diagram-editor.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Diagram Editor › should load without JavaScript errors" classname="diagram-editor.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="homepage.spec.ts" timestamp="2025-05-30T14:09:13.308Z" hostname="chromium" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Homepage › should load the homepage successfully" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Homepage › should have working navigation links" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Homepage › should be responsive on mobile devices" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Homepage › should have proper meta tags for SEO" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Homepage › should load without console errors" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Homepage › should have accessible content" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mermaid-rendering.spec.ts" timestamp="2025-05-30T14:09:13.308Z" hostname="chromium" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="Mermaid Diagram Rendering › should render simple Mermaid diagram correctly" classname="mermaid-rendering.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mermaid Diagram Rendering › should render complex Mermaid diagram correctly" classname="mermaid-rendering.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mermaid Diagram Rendering › should capture and analyze specific Mermaid errors" classname="mermaid-rendering.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="performance.spec.ts" timestamp="2025-05-30T14:09:13.308Z" hostname="chromium" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Performance Tests › should load homepage within performance budget" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should load editor page within performance budget" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should handle large diagrams efficiently" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should maintain responsiveness during AI generation" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should handle rapid user interactions" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should maintain performance on mobile devices" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should handle memory efficiently" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should handle concurrent users simulation" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="security.spec.ts" timestamp="2025-05-30T14:09:13.308Z" hostname="chromium" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Security Tests › should prevent XSS attacks in AI input" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should prevent XSS in Mermaid editor" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should have proper Content Security Policy headers" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should prevent clickjacking attacks" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should sanitize user input in diagram labels" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should handle malformed input gracefully" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should prevent CSRF attacks" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should handle file upload security" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should validate data integrity" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should handle authentication securely" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="simple-mermaid-test.spec.ts" timestamp="2025-05-30T14:09:13.308Z" hostname="chromium" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Simple Mermaid Test › should render Mermaid on test page" classname="simple-mermaid-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
</testsuites>