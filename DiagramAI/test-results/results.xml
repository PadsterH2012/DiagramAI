<testsuites id="" name="" tests="34" failures="0" skipped="0" errors="0" time="20.021698">
<testsuite name="diagram-editor.spec.ts" timestamp="2025-05-29T12:07:51.230Z" hostname="chromium" tests="10" failures="0" skipped="0" time="12.071" errors="0">
<testcase name="Diagram Editor › should load the editor page successfully" classname="diagram-editor.spec.ts" time="1.128">
</testcase>
<testcase name="Diagram Editor › should have both Visual and Mermaid editor tabs" classname="diagram-editor.spec.ts" time="1.343">
</testcase>
<testcase name="Diagram Editor › should display React Flow visual editor" classname="diagram-editor.spec.ts" time="1.168">
</testcase>
<testcase name="Diagram Editor › should have interactive node palette" classname="diagram-editor.spec.ts" time="1.174">
</testcase>
<testcase name="Diagram Editor › should display Mermaid text editor" classname="diagram-editor.spec.ts" time="1.209">
</testcase>
<testcase name="Diagram Editor › should allow text input in Mermaid editor" classname="diagram-editor.spec.ts" time="1.166">
</testcase>
<testcase name="Diagram Editor › should have AI generation functionality" classname="diagram-editor.spec.ts" time="1.138">
</testcase>
<testcase name="Diagram Editor › should be responsive on different screen sizes" classname="diagram-editor.spec.ts" time="1.128">
</testcase>
<testcase name="Diagram Editor › should handle keyboard navigation" classname="diagram-editor.spec.ts" time="1.057">
</testcase>
<testcase name="Diagram Editor › should load without JavaScript errors" classname="diagram-editor.spec.ts" time="1.56">
</testcase>
</testsuite>
<testsuite name="homepage.spec.ts" timestamp="2025-05-29T12:07:51.230Z" hostname="chromium" tests="6" failures="0" skipped="0" time="6.725" errors="0">
<testcase name="Homepage › should load the homepage successfully" classname="homepage.spec.ts" time="0.877">
</testcase>
<testcase name="Homepage › should have working navigation links" classname="homepage.spec.ts" time="1.852">
</testcase>
<testcase name="Homepage › should be responsive on mobile devices" classname="homepage.spec.ts" time="0.803">
</testcase>
<testcase name="Homepage › should have proper meta tags for SEO" classname="homepage.spec.ts" time="0.765">
</testcase>
<testcase name="Homepage › should load without console errors" classname="homepage.spec.ts" time="1.564">
</testcase>
<testcase name="Homepage › should have accessible content" classname="homepage.spec.ts" time="0.864">
</testcase>
</testsuite>
<testsuite name="performance.spec.ts" timestamp="2025-05-29T12:07:51.230Z" hostname="chromium" tests="8" failures="0" skipped="0" time="17.93" errors="0">
<testcase name="Performance Tests › should load homepage within performance budget" classname="performance.spec.ts" time="3.144">
<system-out>
<![CDATA[Performance metrics: { domContentLoaded: [33m0[39m, loadComplete: [33m0[39m }
]]>
</system-out>
</testcase>
<testcase name="Performance Tests › should load editor page within performance budget" classname="performance.spec.ts" time="0.959">
</testcase>
<testcase name="Performance Tests › should handle large diagrams efficiently" classname="performance.spec.ts" time="1.993">
</testcase>
<testcase name="Performance Tests › should maintain responsiveness during AI generation" classname="performance.spec.ts" time="3.054">
</testcase>
<testcase name="Performance Tests › should handle rapid user interactions" classname="performance.spec.ts" time="2.957">
</testcase>
<testcase name="Performance Tests › should maintain performance on mobile devices" classname="performance.spec.ts" time="1.006">
</testcase>
<testcase name="Performance Tests › should handle memory efficiently" classname="performance.spec.ts" time="3.297">
</testcase>
<testcase name="Performance Tests › should handle concurrent users simulation" classname="performance.spec.ts" time="1.52">
</testcase>
</testsuite>
<testsuite name="security.spec.ts" timestamp="2025-05-29T12:07:51.230Z" hostname="chromium" tests="10" failures="0" skipped="0" time="19.469" errors="0">
<testcase name="Security Tests › should prevent XSS attacks in AI input" classname="security.spec.ts" time="3.824">
</testcase>
<testcase name="Security Tests › should prevent XSS in Mermaid editor" classname="security.spec.ts" time="2.049">
</testcase>
<testcase name="Security Tests › should have proper Content Security Policy headers" classname="security.spec.ts" time="0.534">
<system-out>
<![CDATA[Security header x-frame-options: DENY
Security header x-content-type-options: nosniff
Security header referrer-policy: strict-origin-when-cross-origin
]]>
</system-out>
</testcase>
<testcase name="Security Tests › should prevent clickjacking attacks" classname="security.spec.ts" time="0.57">
<system-out>
<![CDATA[Can be framed: [33mtrue[39m
]]>
</system-out>
</testcase>
<testcase name="Security Tests › should sanitize user input in diagram labels" classname="security.spec.ts" time="2.126">
</testcase>
<testcase name="Security Tests › should handle malformed input gracefully" classname="security.spec.ts" time="7.412">
</testcase>
<testcase name="Security Tests › should prevent CSRF attacks" classname="security.spec.ts" time="0.873">
<system-out>
<![CDATA[CSRF protection should be implemented at the API level
]]>
</system-out>
</testcase>
<testcase name="Security Tests › should handle file upload security" classname="security.spec.ts" time="0.601">
<system-out>
<![CDATA[No file upload inputs found
]]>
</system-out>
</testcase>
<testcase name="Security Tests › should validate data integrity" classname="security.spec.ts" time="0.884">
</testcase>
<testcase name="Security Tests › should handle authentication securely" classname="security.spec.ts" time="0.596">
<system-out>
<![CDATA[Authentication security checks completed
]]>
</system-out>
</testcase>
</testsuite>
</testsuites>