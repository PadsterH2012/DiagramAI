# docker-compose.yml
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        VERSION_STRING: ${APP_VERSION:-1.0.45-dev}
        BUILD_DATE: ${BUILD_DATE:-}
        GIT_COMMIT: ${GIT_COMMIT:-}
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@db:5432/diagramai_dev
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=dev-secret-key
      - APP_VERSION=${APP_VERSION:-1.0.45-dev}
      - BUILD_DATE=${BUILD_DATE:-}
      - GIT_COMMIT=${GIT_COMMIT:-}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - diagramai-network

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=diagramai_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - diagramai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d diagramai_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - diagramai-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  mcp-server:
    build:
      context: ../DiagramAI-MCP-Server
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - DIAGRAMAI_WS_URL=ws://app:3000/ws/diagrams
      - DATABASE_URL=postgresql://postgres:password@db:5432/diagramai_dev
    depends_on:
      - app
      - db
    networks:
      - diagramai-network
    restart: unless-stopped

  adminer:
    image: adminer:latest
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db
    depends_on:
      - db
    networks:
      - diagramai-network

volumes:
  postgres_data:
  redis_data:

networks:
  diagramai-network:
    driver: bridge
